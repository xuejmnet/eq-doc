package com.eq.doc.dto.user;

import com.easy.query.core.annotation.Navigate;
import com.easy.query.core.annotation.OrderByProperty;
import com.easy.query.core.enums.RelationTypeEnum;
import com.easy.query.core.expression.parser.core.extra.ExtraAutoIncludeConfigure;
import com.easy.query.core.proxy.sql.Select;
import com.eq.doc.domain.Post;
import com.eq.doc.domain.User;
import com.eq.doc.domain.proxy.CommentProxy;
import com.eq.doc.domain.proxy.PostProxy;
import lombok.Data;

import java.time.LocalDateTime;
import java.util.List;

/**
 * this file automatically generated by easy-query struct dto mapping
 * 当前文件是easy-query自动生成的 结构化dto 映射
 * {@link User }
 *
 * @author xuejiaming
 * @easy-query-dto schema: normal
 */
@Data
public class UserWithPost2Response {


    private String id;
    private String name;
    /**
     * 用户发布的帖子集合
     **/
    @Navigate(value = RelationTypeEnum.OneToMany, limit = 3,orderByProps = {
            @OrderByProperty(property = PostProxy.Fields.publishAt,asc = false)
    })
    private List<InternalPosts> posts;


    /**
     * {@link com.eq.doc.domain.Post }
     */
    @Data
    public static class InternalPosts {


        private static final ExtraAutoIncludeConfigure EXTRA_AUTO_INCLUDE_CONFIGURE = PostProxy.TABLE.EXTRA_AUTO_INCLUDE_CONFIGURE()
                .where(t_post -> {
                    LocalDateTime nowYear = LocalDateTime.of(2025,1,1,0,0);
                    LocalDateTime nextYear = nowYear.plusYears(1);
                    //返回的帖子是今天的
                    t_post.publishAt().rangeClosedOpen(nowYear,nextYear);
                });

        private String id;
        private String title;
        private LocalDateTime publishAt;
        /**
         * 评论信息
         **/
        @Navigate(value = RelationTypeEnum.OneToMany, limit = 3,orderByProps = {
                @OrderByProperty(property = CommentProxy.Fields.createAt,asc = true)
        })
        private List<InternalComment> commentList;


    }

    /**
     * {@link com.eq.doc.domain.Comment }
     */
    @Data
    public static class InternalComment {

        private static final ExtraAutoIncludeConfigure EXTRA_AUTO_INCLUDE_CONFIGURE = CommentProxy.TABLE.EXTRA_AUTO_INCLUDE_CONFIGURE()
                .where(t_comment -> {
                    //只返回一级目录
                    t_comment.parentId().eq("0");
                });
        private String id;
        private String content;
        private LocalDateTime createAt;
        /**
         * 评论人
         **/
        @Navigate(value = RelationTypeEnum.ManyToOne)
        private InternalUser user;

    }

    /**
     * {@link User}
     **/
    @Data
    public static class InternalUser {
        private String name;
    }

}
